header_selector: x-nylon-proxy

plugins:
  - name: plugin_sdk
    type: ffi
    file: ./target/examples/go/plugin_sdk.so
    config:
      debug: true

services:
  - name: http-service
    service_type: http
    algorithm: round_robin # Options: round_robin, random, consistent, weighted
    endpoints:
      - ip: 127.0.0.1
        port: 3000
        # weight: 10 # Optional
      - ip: 127.0.0.1
        port: 3001
        # weight: 1 # Optional
    health_check:
      enabled: true
      path: /health # Reserved for HTTP checks (อนาคต)
      interval: 3s
      timeout: 1s
      healthy_threshold: 2
      unhealthy_threshold: 2

  - name: ws-service
    service_type: plugin
    plugin:
      name: plugin_sdk
      entry: ws

  - name: stream-service
    service_type: plugin
    plugin:
      name: plugin_sdk
      entry: stream

  - name: static
    service_type: static
    static:
      root: ./examples/static
      index: index.html
      spa: true

middleware_groups:
  example:
    - plugin: plugin_sdk
      entry: "authz"
      payload:
        client_ip: "${request(client_ip)}"

    - plugin: RequestHeaderModifier
      payload:
        remove:
          - x-version
        set:
          - name: x-hb-conf
            value: "env-${or(env(MY_APP_NAME), 'default')}"
          - name: x-request-id
            value: "${uuid(v7)}"
          - name: x-timestamp
            value: "${timestamp()}"
          - name: x-forwarded-for
            value: "${request(client_ip)}-${eq(request(client_ip), '127.0.0.1', 'local')}"
          - name: x-host
            value: "${header(host)}"

    # - plugin: ResponseHeaderModifier
    #   payload:
    #     set:
    #       - name: x-request-id-false
    #         value: "${or(header(x-request-id-false), concat('foo', '-', uuid(v4)))}"
    #       - name: x-request-id
    #         value: "${header(x-request-id)}"
    #       - name: x-server
    #         value: ${or(env(SERVER_NAME), 'my-server')}
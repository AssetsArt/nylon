header_selector: x-nylon-proxy

# NATS messaging configuration
messaging:
  - name: default
    servers:
      - nats://localhost:4222
    request_timeout_ms: 5000
    max_inflight: 1024
    # Optional: advanced settings
    # default_headers:
    #   x-environment: production
    # retry:
    #   max: 3
    #   backoff_ms_initial: 100
    #   backoff_ms_max: 1000

plugins:
  # NATS Plugin - horizontally scalable
  - name: plugin_nats
    messaging: default
    group: demo-workers
    config:
      debug: true
    # Smart defaults applied automatically
    # Optional: override per-phase behavior
    # per_phase:
    #   request_filter:
    #     timeout_ms: 8000
    #     on_error: retry
    #   response_filter:
    #     timeout_ms: 3000
    #     on_error: continue
    #   logging:
    #     timeout_ms: 200
    #     on_error: continue

services:
  # Http service
  - name: app-service
    service_type: http
    algorithm: round_robin
    endpoints:
      - ip: 127.0.0.1
        port: 3001

  # Static assets / SPA
  - name: static
    service_type: static
    static:
      root: ./examples/static
      index: index.html
      spa: true

middleware_groups:
  # Security headers
  security:
    - plugin: RequestHeaderModifier
      payload:
        set:
          - name: x-request-id
            value: "${uuid(v7)}"
          - name: x-forwarded-for
            value: "${request(client_ip)}"
          - name: x-timestamp
            value: "${timestamp()}"
    - plugin: ResponseHeaderModifier
      payload:
        set:
          - name: x-server
            value: nylon-nats-demo

  # Authorization using NATS plugin
  auth:
    - plugin: plugin_nats
      entry: "authz"
      payload:
        client_ip: "${request(client_ip)}"
        user_id: "${header(x-user-id)}"

routes:
  # API routes with NATS authentication
  - path: /api/*
    methods: [GET, POST, PUT, DELETE, PATCH]
    service: app-service
    middleware:
      - security
      - auth

  # Public routes
  - path: /*
    methods: [GET]
    service: static
    middleware:
      - security

